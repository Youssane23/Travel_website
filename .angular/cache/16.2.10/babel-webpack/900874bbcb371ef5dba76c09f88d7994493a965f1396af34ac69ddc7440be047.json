{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ComponentsModule } from './components/components.module';\nimport { AppComponent } from './app.component';\n// import ngx-translate and the http loader\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngx-translate/core\";\nconst routes = [{\n  path: '',\n  loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule)\n}, {\n  path: '**',\n  loadChildren: () => import('./pages/not-found/not-found.module').then(m => m.NotFoundModule)\n}];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, RouterModule.forRoot(routes), ComponentsModule, HttpClientModule, TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient]\n        }\n      })]\n    });\n  }\n  return AppModule;\n})();\n// required for AOT compilation\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}